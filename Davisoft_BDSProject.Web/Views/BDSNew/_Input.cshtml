@using System.Configuration
@using Davisoft_BDSProject.Web.Helpers
@using Davisoft_BDSProject.Web.Models
@using OfficeOpenXml.FormulaParsing.Excel.Functions.Math
@using Resources
@model Davisoft_BDSProject.Domain.Entities.BDSNew




<div class="form-group">
    <div class="col-md-1">
    </div>
    <div class="col-md-10 col-sm-12">
        <section class="panel panel-default">
            <h3 class="tilte_l">Thông tin cơ bản
            </h3>
            <div class="panel-body">

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Account", "Employer") <span class="required">*</span></label>
                    <div class="col-md-9">
                        @Html.Bootstrap().DropDownListFor(m => m.IdAcount, (List<SelectListItem>)ViewBag.EmployerInformations).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Name", "Title") <span class="required">*</span></label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextBoxFor(m => m.Title).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_WorkingPlace", "Working Place") <span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.Bootstrap().DropDownListFor(m => m.AddressWork, (List<SelectListItem>)ViewBag.Cities).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                    <label class="control-label col-md-2">@Utilities.Resource("BDSNew_Quantity", "Quantity") <span class="required">*</span></label>
                    <div class="col-md-3">
                        @Html.Bootstrap().DropDownListFor(m => m.Quantity, new List<SelectListItem>
                        {
                              new SelectListItem{Text = "Chọn số lượng",Value = "0",Selected = true},
                            new SelectListItem{Text = "1",Value = "1",Selected = true},
                            new SelectListItem{Text = "2",Value = "2",Selected = false},
                            new SelectListItem{Text = "3",Value = "3",Selected = false},
                            new SelectListItem{Text = "4",Value = "4",Selected = false},
                            new SelectListItem{Text = "5",Value = "5",Selected = false},

                            new SelectListItem{Text = "10",Value = "10",Selected = false},
                            new SelectListItem{Text = "15",Value = "15",Selected = false},
                            new SelectListItem{Text = "20",Value = "20",Selected = false},
                            new SelectListItem{Text = "25",Value = "25",Selected = false},
                            new SelectListItem{Text = "30",Value = "30",Selected = false},
                            new SelectListItem{Text = "50",Value = "50",Selected = false},
                            new SelectListItem{Text = "100",Value = "100",Selected = false},
                            new SelectListItem{Text = "Trên 100",Value = "101",Selected = false}

                        }).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Salary", "Salary") <span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.Bootstrap().DropDownListFor(m => m.FromSalary, (List<SelectListItem>)ViewBag.ListSalary).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                        @*@Html.Bootstrap().DropDownListFor(m => m.FromSalary, new List<SelectListItem>
                        {
                       
                            new SelectListItem{Text = "Chọn",Value = "",Selected = true},
                            new SelectListItem{Text = "3 triệu",Value = "3",Selected = false},
                            new SelectListItem{Text = "4 triệu",Value = "4",Selected = false},
                            new SelectListItem{Text = "5 triệu",Value = "5",Selected = false},
                            new SelectListItem{Text = "6 triệu",Value = "6",Selected = false},
                            new SelectListItem{Text = "7 triệu",Value = "7",Selected = false},
                            new SelectListItem{Text = "8 triệu",Value = "8",Selected = false},
                            new SelectListItem{Text = "9 triệu",Value = "9",Selected = false},
                            new SelectListItem{Text = "10 triệu",Value = "10",Selected = false}
                        
                        }).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)*@
                    </div>
                    <label class="control-label col-md-2">@Utilities.Resource("BDSNew_ToSalary", "To") <span class="required">*</span></label>
                    <div class="col-md-3">
                        @Html.Bootstrap().DropDownListFor(m => m.ToSalary, (List<SelectListItem>)ViewBag.ListSalary).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                        @*@Html.Bootstrap().DropDownListFor(m => m.ToSalary, new List<SelectListItem>
                        {
                       
                           new SelectListItem{Text = "Chọn",Value = "",Selected = true},
                            new SelectListItem{Text = "5 triệu",Value = "5",Selected = false},
                            new SelectListItem{Text = "6 triệu",Value = "6",Selected = false},
                            new SelectListItem{Text = "7 triệu",Value = "7",Selected = false},
                            new SelectListItem{Text = "8 triệu",Value = "8",Selected = false},
                            new SelectListItem{Text = "9 triệu",Value = "9",Selected = false},
                            new SelectListItem{Text = "10 triệu",Value = "10",Selected = false},
                            new SelectListItem{Text = "11 triệu",Value = "11",Selected = false},
                            new SelectListItem{Text = "12 triệu",Value = "12",Selected = false},
                            new SelectListItem{Text = "13 triệu",Value = "13",Selected = false},
                            new SelectListItem{Text = "14 triệu",Value = "14",Selected = false},
                            new SelectListItem{Text = "15 triệu",Value = "15",Selected = false},
                            new SelectListItem{Text = "16 triệu",Value = "16",Selected = false},
                            new SelectListItem{Text = "17 triệu",Value = "17",Selected = false},
                            new SelectListItem{Text = "18 triệu",Value = "18",Selected = false},
                            new SelectListItem{Text = "19 triệu",Value = "19",Selected = false},
                            new SelectListItem{Text = "20 triệu",Value = "20",Selected = false},
                        

                        }).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)*@
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Bonus", "Bonus") </label>
                    <div class="col-md-4">
                        @Html.Bootstrap().TextBoxFor(m => m.Bonus).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                    <label class="control-label col-md-2">@Utilities.Resource("BDSNew_Sex", "Sex") <span class="required">*</span></label>
                    <div class="col-md-3">
                        @Html.Bootstrap().DropDownListFor(m => m.Sex, new List<SelectListItem>
                        {
                            new SelectListItem{Text = "Male",Value = "1",Selected = true},
                            new SelectListItem{Text = "Female",Value = "2",Selected = false},
                        

                        }).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_TimeWork", "Experience") <span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.Bootstrap().DropDownListFor(m => m.IdTimeWork, (List<SelectListItem>)ViewBag.TimeWorks).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                    <label class="control-label col-md-2">@Utilities.Resource("BDSNew_Education", "Education") <span class="required">*</span></label>
                    <div class="col-md-3">
                        @Html.Bootstrap().DropDownListFor(m => m.IdEducation, (List<SelectListItem>)ViewBag.Educations).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Career", "Career") <span class="required">*</span></label>
                    <div class="col-md-9">

                        @Html.Bootstrap().DropDownListFor(m => m.CareerID, (List<SelectListItem>)ViewBag.Careers).HtmlAttributes(new { @class = "form-control", @multiple = "multiple" }).ShowValidationMessage(true)
                        <script>
                            setTimeout(function() {
                                $('#CareerID').val('@(Model.Career)'.split(','));
                                $('#CareerID').select2();
                            },1000);
                        </script>
                    
                    
                    </div>

                </div>

            </div>
        </section>
    </div>
</div>



<div class="form-group">
    <div class="col-md-1">
    </div>
    <div class="col-md-10 col-sm-12">
        <section class="panel panel-default">
            <h3 class="tilte_l">Nội dung
            </h3>
            <div class="panel-body">


                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_DesCompany", "Description Company") </label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextAreaFor(m => m.DesCompany).HtmlAttributes(new { @class = "form-control" }).Rows(5).ShowValidationMessage(true)
                    </div>
                </div>







               



                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_DesWork", "Description Work") </label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextAreaFor(m => m.DesWork).HtmlAttributes(new { @class = "form-control" }).Rows(5).ShowValidationMessage(true)
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Benefit", "Benefit") </label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextAreaFor(m => m.Benefit).HtmlAttributes(new { @class = "form-control" }).Rows(5).ShowValidationMessage(true)
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_TimeProbationary", "Time Probationary") <span class="required">*</span></label>
                    <div class="col-md-2">
                        @Html.Bootstrap().DropDownListFor(m => m.TimeProbationary, new List<SelectListItem>
                        {
                             new SelectListItem{Text = "Chọn",Value = "",Selected = true},
                            new SelectListItem{Text = "1 tuần",Value = "1",Selected = true},
                            new SelectListItem{Text = "2 tuần",Value = "2",Selected = false},
                            new SelectListItem{Text = "3 tuần",Value = "3",Selected = false},
                            new SelectListItem{Text = "4 tuần",Value = "4",Selected = false},
                            new SelectListItem{Text = "5 tuần",Value = "5",Selected = false},
                            new SelectListItem{Text = "6 tuần",Value = "6",Selected = false},
                            new SelectListItem{Text = "7 tuần",Value = "7",Selected = false},
                            new SelectListItem{Text = "8 tuần",Value = "8",Selected = false},
                            new SelectListItem{Text = "9 tuần",Value = "9",Selected = false},
                            new SelectListItem{Text = "10 tuần",Value = "10",Selected = false},
                            new SelectListItem{Text = "11 tuần",Value = "11",Selected = false},
                            new SelectListItem{Text = "12 tuần",Value = "12",Selected = false},
                            new SelectListItem{Text = "13 tuần",Value = "13",Selected = false},
                            new SelectListItem{Text = "14 tuần",Value = "14",Selected = false},
                            new SelectListItem{Text = "15 tuần",Value = "15",Selected = false}
                     


                        }).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_FromAge", "From Age") <span class="required">*</span></label>
                    <div class="col-md-2">
                        @Html.Bootstrap().DropDownListFor(m => m.FromAge, new List<SelectListItem>
                        {
                             new SelectListItem{Text = "Chọn",Value = "",Selected = true},
                            new SelectListItem{Text = "18 tuổi",Value = "18",Selected = false},
                            new SelectListItem{Text = "19 tuổi",Value = "19",Selected = false},
                            new SelectListItem{Text = "20 tuổi",Value = "20",Selected = false},
                            new SelectListItem{Text = "21 tuổi",Value = "21",Selected = false},
                            new SelectListItem{Text = "22 tuổi",Value = "22",Selected = false},
                            new SelectListItem{Text = "23 tuổi",Value = "23",Selected = false},
                            new SelectListItem{Text = "24 tuổi",Value = "24",Selected = false},
                            new SelectListItem{Text = "25 tuổi",Value = "25",Selected = false},
                            new SelectListItem{Text = "26 tuổi",Value = "26",Selected = false},
                            new SelectListItem{Text = "27 tuổi",Value = "27",Selected = false},
                            new SelectListItem{Text = "28 tuổi",Value = "28",Selected = false},
                            new SelectListItem{Text = "29 tuổi",Value = "29",Selected = false},
                            new SelectListItem{Text = "30 tuổi",Value = "30",Selected = false},
                           



                        }).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                    <label class="control-label col-md-1">@Utilities.Resource("BDSNew_ToAge", "To") <span class="required">*</span></label>
                    <div class="col-md-2">
                        @Html.Bootstrap().DropDownListFor(m => m.ToAge, new List<SelectListItem>
                        {
                             new SelectListItem{Text = "Chọn",Value = "",Selected = true},
                            new SelectListItem{Text = "25 tuổi",Value = "25",Selected = false},
                            new SelectListItem{Text = "26 tuổi",Value = "26",Selected = false},
                            new SelectListItem{Text = "27 tuổi",Value = "27",Selected = false},
                            new SelectListItem{Text = "28 tuổi",Value = "28",Selected = false},
                            new SelectListItem{Text = "29 tuổi",Value = "29",Selected = false},
                            new SelectListItem{Text = "30 tuổi",Value = "30",Selected = false},
                            new SelectListItem{Text = "31 tuổi",Value = "31",Selected = false},
                            new SelectListItem{Text = "32 tuổi",Value = "32",Selected = false},
                            new SelectListItem{Text = "33 tuổi",Value = "33",Selected = false},
                            new SelectListItem{Text = "34 tuổi",Value = "34",Selected = false},
                            new SelectListItem{Text = "35 tuổi",Value = "35",Selected = false},
                       


                        }).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>

                
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Images", "Images")</label>
                    <div class="col-md-9">
                        
                        <div >
                            
                            <div>
                                <style>
                                    .thumb {
                                        height: 75px;
                                        border: 1px solid #000;
                                        margin: 10px 5px 0 0;
                                    }
                                </style>

                                <input type="file" id="files" name="files" multiple accept="image/*" />


                                <script>
                                   
                                    function handleFileSelect(evt) {
                                        var files = evt.target.files; // FileList object

                                        // Loop through the FileList and render image files as thumbnails.
                                        for (var i = 0, f; f = files[i]; i++) {

                                            // Only process image files.
                                            if (!f.type.match('image.*')) {
                                                continue;
                                            }

                                            var reader = new FileReader();

                                            // Closure to capture the file information.
                                            reader.onload = (function (theFile) {
                                                return function (e) {
                                                    // Render thumbnail.
                                                    var span = document.createElement('span');
                                                    span.innerHTML = ['<img class="thumb" src="', e.target.result,
                                                                      '" title="', escape(theFile.name), '"/>'].join('');
                                                    document.getElementById('list').insertBefore(span, null);
                                                };
                                            })(f);

                                            // Read in the image file as a data URL.
                                            reader.readAsDataURL(f);
                                        }
                                    }

                                    document.getElementById('files').addEventListener('change', handleFileSelect, false);
                                </script>

                            </div>
                            <div>
                                <output id="list"></output>
                            </div>
                            @{
                                if (Model.BDSPictures != null && Model.BDSPictures.Count > 0)
                                {
                                    <div>
                                        <output>
                                            @{
                                    foreach (var pic in Model.BDSPictures.ToList())
                                    {
                                        <span style="position:relative;float:left"><input type="hidden" name="img_id" value="@(pic.ID)" /><i class="delete fa fa-times" style="position: absolute; right: 5px; top: 10px; cursor: pointer;"></i><img class="thumb" src="@ConfigurationManager.AppSettings["UrlImage"]@pic.originalFilepath.ToString().Split('_')[0]/@pic.originalFilepath" title="@(pic.title)"></span>
                                    }
                                            }
                                        </output>
                                    </div>
                                }
                            }
                        </div> 
                    </div>
                </div>

            </div>
        </section>
    </div>
</div>





<div class="form-group">
    <div class="col-md-1">
    </div>
    <div class="col-md-10 col-sm-12">
        <section class="panel panel-default">
            <h3 class="tilte_l">Thông tin liên hệ nhà tuyển dụng
            </h3>
            <div class="panel-body">

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_NameCompany", "Name Company")</label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextBoxFor(m => m.NameCompany).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_AddressApply", "Address Apply")</label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextBoxFor(m => m.AddressApply).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_NameContact", "Name Contact")</label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextBoxFor(m => m.NamesContact).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_PhoneContact", "Phone Contact")</label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextBoxFor(m => m.PhoneContact).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Email", "Email")</label>
                    <div class="col-md-9">
                        @Html.Bootstrap().TextBoxFor(m => m.Email).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Deadline", "Dead Line")</label>
                    <div class="col-md-4">
                        @Html.DatePickerFor(m => m.ToDeadline, new { @class = "form-control date" })
                        @Html.ValidationMessageFor(m => m.ToDeadline)

                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Language", "Language")</label>
                    <div class="col-md-4">
                        @Html.Bootstrap().DropDownListFor(m => m.IdLanguage, (List<SelectListItem>)ViewBag.Languages).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_Website", "Website")</label>
                    <div class="col-md-4">
                        @Html.Bootstrap().TextBoxFor(m => m.WebSiteCompany).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>


            </div>
        </section>
    </div>
</div>







<div class="form-group">
    <div class="col-md-1">
    </div>
    <div class="col-md-10 col-sm-12">
        <section class="panel panel-default">
            <h3 class="tilte_l">Loại tin đăng và lịch đăng
            </h3>
            <div class="panel-body">

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_TypeNews", "Type News") <span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.Bootstrap().DropDownListFor(m => m.IdTypeNews, (List<SelectListItem>)ViewBag.NewsTypes).HtmlAttributes(new { @class = "form-control" }).ShowValidationMessage(true)
                    </div>
                </div>

                <div class="form-group fromdate-todate">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_FromCreateNewsToCreateNews", "From Date - To Date") <span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.Bootstrap().TextBoxFor(m => m.FromDateToDateString).HtmlAttributes(new { @class = "form-control datepicker-range" }).ShowValidationMessage(true)



                    </div>

                </div>

                <div class="form-group post-date" style="display:none">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_PostDate", "Post date") <span class="required">*</span></label>
                    <div class="col-md-4">
                        <div class="btn-group" data-toggle="buttons">
                            <label class="btn btn-default">
                                <input type="radio"  name="PostDate" value="7" /> 7 ngày
                            </label>
                            <label class="btn btn-default">
                                <input type="radio"  name="PostDate" value="15" /> 15 ngày
                            </label>
                            <label class="btn btn-default">
                                <input type="radio" name="PostDate" value="30" /> 30 ngày
                            </label>
                            <label class="btn btn-default">
                                <input type="radio" name="PostDate" value="60" /> 60 ngày
                            </label>
                          
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_MoneyInDay", "Price") <span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.Bootstrap().TextBoxFor(m => m.MoneyInDay).HtmlAttributes(new { @class = "form-control" }).Readonly(true).ShowValidationMessage(true)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">@Utilities.Resource("BDSNew_TotalMoney", "Total Price") <span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.Bootstrap().TextBoxFor(m => m.TotalMoney).HtmlAttributes(new { @class = "form-control" }).Readonly(true).ShowValidationMessage(true)
                    </div>
                </div>

            </div>
        </section>
    </div>
</div>

<input type="hidden" name="cfile" />
<input type="hidden" name="ID" class="idProduct_" value="@Model.ID" />
<input type="hidden" name="nameImg" />
@Html.HiddenFor(m => m.Active)
@Html.HiddenFor(m => m.ModifiedDate)
@Html.HiddenFor(m => m.CreateDate)
@Html.HiddenFor(m => m.CreateUser)
@Html.HiddenFor(m => m.ModifiedUser)
@Html.HiddenFor(m => m.FromDeadline)
@Html.HiddenFor(m => m.IdTypeNewsCuurent)
@Html.HiddenFor(m => m.Status)
@Html.HiddenFor(m => m.DateReup)
@Html.HiddenFor(m => m.CountReup)
@Html.HiddenFor(m => m.RefTranHis)
@Html.HiddenFor(m => m.Career)
@Html.HiddenFor(m => m.MaxReup)
@Html.Script(
    @<text>
<link href="/Content/UploadVanGia/main.css" rel="stylesheet" />
<link href="/Content/UploadVanGia/dropzone.css" rel="stylesheet" />
<link href="/Content/UploadVanGia/cropper.min.css" rel="stylesheet" />
<link href="/Content/UploadVanGia/cussupload.css" rel="stylesheet" />
<script src="~/Scripts/UploadImg/cropperVG.js"></script>
<script src="~/Scripts/UploadImg/cusjsVG.js"></script>
<script src="~/Scripts/UploadImg/dropzoneVG.js"></script>
<script>
    $(document).on('click', '#UrlImage', function () {
        $('input[type="File"]').click();
    });
    $("i.delete").on('click', function (e) {
        var rs = confirm('Bạn muốn xóa hình này?');
        if (rs == true) {
            $(this).parents('span').eq(0).remove();
        }

    });
    $(document).on('change', 'input[type="File"]', function () {
        var upload = $(this);

        var indicator = upload.next('.selected');
        if (indicator.length == 0) {
            indicator = $('<span class="selected"></span>').insertAfter(upload);
        }

        if (upload.val() == '') {
            indicator.html('');
        } else if (window.FileReader) {

            for (var i = 0; i < upload[0].files.length; i++) {
                upload[0].files[i]
                $('#UrlImage').val(upload.val());
                var reader = new FileReader();
                reader.onload = function (e) {
                    if (upload[0].files[0].size > 2000000) {
                        $.sticky("@Resource.FileToLarge", { type: 'st-danger' });
                        upload.replaceWith(upload = upload.clone(true));
                    } else {
                        $('#picture').html("<img style='width: 120px; height:120px;' src='" + e.target.result + "' class='img-polaroid user-picture-preview'/>");
                    }
                };
            }

            reader.readAsDataURL(upload[0].files[0]);
        } else {
            indicator.html("Selected");
        }
    });

    $(document).on("change", "#FromSalary", function () {
        $('#ToSalary').val('');
        $("#ToSalary").select2("val", "");
        if ($('#FromSalary').val() != "") {
            var val = $('#ToSalary').val();
           
            $('#ToSalary').empty();
            $('#ToSalary').append('<optiop value="">Please Select</option>');
            for (var i = ($('#FromSalary').val() < 1 ? 1 : $('#FromSalary').val()) ; i <= 100; i++) {

                $('#ToSalary').append('<option ' + (i == val ? 'selected="selected"' : '') + ' value="' + i + '">' + i + ' Triệu</option>');
                if (i > val) {
                    $('#ToSalary').val("");
                    $("#ToSalary").select2("val", "");
                } else {
                    if (i >= val) {



                    }

                }

            }
        }

    });
    $(document).on("change", "#FromAge", function () {
        var val = $('#ToAge').val();
        $('#ToAge').val('');
        $("#ToAge").select2("val", "");
        if ($('#FromAge').val() != "") {
         
       
            $('#ToAge').empty();
            $('#ToAge').append('<optiop value="">Please Select</option>');
            for (var i = ($('#FromAge').val() < 25 ? 25 : $('#FromAge').val()) ; i <= 35; i++) {

                $('#ToAge').append('<option ' + (i == val ? 'selected="selected"' : '') + ' value="' + i + '">' + i + ' age</option>');
                if (i > val) {
                    $('#ToAge').val("");
                    $("#ToAge").select2("val", "");
                } else {
                    if (i >= val) {
                     

                       
                    }
                  
                }
            }
        }

    });
    setTimeout(function () {

        var id = $('#IdTypeNews').val();
        $('.fromdate-todate').show();
        $('.post-date').hide();
        if (id == 4) {
            $('.fromdate-todate').hide();
            $('.post-date').show();
            var dateArray = $('#FromDateToDateString').val().split(' - ');
            var aarf = dateArray[0].split('/');
            var aart = dateArray[1].split('/');
            var dateF = new Date(parseInt(aarf[2]), parseInt(aarf[1]) - 1, parseInt(aarf[0]));
            var dateT = new Date(parseInt(aart[2]), parseInt(aart[1]) - 1, parseInt(aart[0]));
            var timeDiff = Math.abs(dateT.getTime() - dateF.getTime());
            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
            //   alert(diffDays);
            $('.post-date input').each(function () {
             
                if ($(this).val() == diffDays)
                {
                    $(this).prop('checked', true);
                    $(this).parents('.btn').eq(0).addClass('active');
                    return;
                }
            });
          //  $('input[name="PostDate"]').val(diffDays);
        }

    }, 1000);
  
    $(document).on("change", "#IdTypeNews,#FromDateToDateString", function () {

        var id = $('#IdTypeNews').val();
        $('.fromdate-todate').show();
        $('.post-date').hide();
        var rDate = $('#FromDateToDateString').val();
        if (id != null && id != "" && id != null && id != "") {
            $.getJSON("@Url.Action("CalcuMoney")?idType=" + id + "&rDate=" + rDate, function(data) {
                $('#MoneyInDay').val(data.PriceInDay);
                $('#TotalMoney').val(data.TotalPrice);
            });
        }
        if(id==4)
        {
            $('.fromdate-todate').hide();
            $('.post-date').show();
            
        }

    });
   
    $(document).on("change", "#IdAcount", function () {

        var id = $('#IdAcount').val();
      
        if (id != null && id != "") {
            $.getJSON("@Url.Action("EmployerInformation")?idAccount=" + id, function (data) {
                $('#NameCompany').val(data.Name);
                $('#AddressApply').val(data.AddressContact);
                $('#NamesContact').val(data.NameContact);
                $('#PhoneContact').val(data.PhoneContact);
                $('#Email').val(data.EmailContact);
                $('#WebSiteCompany').val(data.WebSite);
            });
        }

    });
    
   
    function UploadImg() {

        $('#Career').val($('#CareerID').val().join(','));
        var id = $('#IdTypeNews').val();
        if (id == 4) {
            var value = $('.post-date label.active input').eq(0).val();           
            var dateArray = $('#FromDateToDateString').val().split(' - ');
            var aarf = dateArray[0].split('/');
            var aart = dateArray[1].split('/');
            var fromDate = new Date(parseInt(aarf[2]), parseInt(aarf[1]) - 1, parseInt(aarf[0]));
            var toDate = new Date(new Date(parseInt(aarf[2]), parseInt(aarf[1]) - 1, parseInt(aarf[0])).setDate(new Date(parseInt(aarf[2]), parseInt(aarf[1]) - 1, parseInt(aarf[0])).getDate() + parseInt(value)));
            var dateString = fromDate.getDate() + "/" + (fromDate.getMonth() + 1) + "/" + fromDate.getFullYear() + " - " + toDate.getDate() + "/" + (toDate.getMonth() + 1) + "/" + toDate.getFullYear();
            $('#FromDateToDateString').val(dateString);

        }
        if (!$(document.forms[0]).valid()) {
            return false;
        } 
        return true;
    }

</script>
</text>)