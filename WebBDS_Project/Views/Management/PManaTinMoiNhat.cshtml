
@using System.Configuration
@using System.Web.UI.WebControls
@using WebBDS_Project.Models
@{

    davisoft_bdsprojectEntities1 db = new davisoft_bdsprojectEntities1();
    int from = ViewBag.from;
    int page = ViewBag.page;
    int view = ViewBag.view;
    int count = 0;
    int tt = ViewBag.tt == "" ? 0 : int.Parse(ViewBag.tt);
    var States = (from a in db.States
                  join b in db.StateTexts on a.state_id equals b.id
                  where b.language_id == "vi" && a.Status == 1 && a.state_id != 59 && a.state_id != 28
                  select new { Id = a.state_id, Name = b.text }).ToList();

    States.Insert(0, new { Id = 59, Name = "TP.Hồ Chí Minh" });
    States.Insert(1, new { Id = 28, Name = "TP.Hà Nội" });
    var IdAccount = Session["IdUser"] != null ? int.Parse(Session["IdUser"].ToString()) : 0;
}


@{
    var typeVip = db.BDSNewsTypes.FirstOrDefault(T => T.Active == 1 && T.CodeNewsType == "TBT");
}
<ul class="list_work_2 green">
   @{
     /*  var query = (from a in db.BDSNews
                    join b in db.BDSNewsTypes on a.IdTypeNewsCuurent equals b.Id
                    where a.Active == 1 && a.Status == 1 && (tt == 0 || a.AddressWork == tt)
           orderby b.Order ascending, a.FromCreateNews descending
                    select a);*/
       var query = db.BDSNews.Where(A => A.Active == 1 && A.Status == 1 && A.IdTypeNewsCuurent == typeVip.ID && (tt == 0 || A.AddressWork == tt) && A.IdAcount == IdAccount);  
       var ListNews = query.OrderByDescending(T => T.FromCreateNews).Skip(from).Take(view).ToList();
       count = query.Count();
       foreach (var news in ListNews)
       {
           if (news.DateReup.HasValue && news.DateReup.Value.ToString("dd/MM/yyyy") != DateTime.Now.ToString("dd/MM/yyyy"))
           {
               news.CountReup = 0;
               db.Entry(news).State = System.Data.EntityState.Modified;
               db.SaveChanges();
           }
             var account = db.BDSEmployerInformations.Where(T => T.IdAccount == news.IdAcount).FirstOrDefault();
           if (account != null)
           {
                <li>
            <div class="grid_9">
                <a href="@Url.Action("Detail","Default",new { id=news.Title.UrlFrendly()+"-"+news.ID})" class="image_2">
                    @if (db.BDSPictures.Any(x => x.advert_id == news.ID))
                    {
                        <img width="50" src="@(ConfigurationManager.AppSettings["UrlImage"] + (db.BDSPictures.FirstOrDefault(x => x.advert_id == news.ID) != null ? (db.BDSPictures.FirstOrDefault(x => x.advert_id == news.ID).originalFilepath.Split('_')[0] + "/" + db.BDSPictures.FirstOrDefault(x => x.advert_id == news.ID).originalFilepath) : "img.png"))" alt="2">

                    }
                    else
                    {
                        <img width="50" src="@(ConfigurationManager.AppSettings["UrlImage"] + (account.UrlImage != null ? (account.UrlImage.Split('_')[0] + "/" + account.UrlImage) : "img.png"))" alt="2">

                    }
                     <p class="vip">
                        <i class="fa fa-star"></i>
                        <span></span>
                    </p>
                </a>
                <div class="name">
                    <h2><a href="@Url.Action("Detail", "Default", new {id = news.Title.UrlFrendly() + "-" + news.ID})">@( news.Title) <span>
@*@(db.BDSEmployerInformations.Where(T => T.IdAccount == news.IdAcount).FirstOrDefault().Name)*@
                                                                                                                                          @news.NameCompany
</span></a></h2>
                    <p><i class="fa fa-map-marker"></i>@(States.Where(T => T.Id == news.AddressWork).FirstOrDefault().Name)</p>
                    <p><i class="fa fa-clock-o"></i>@(news.FromCreateNews.Value.ToString("dd/MM/yyyy"))</p>
                </div>
            </div>
            <div class="grid_3 omega">
                <p><i class="fa fa-usd"></i>Lương: Từ <span>@(news.FromSalary) - @(news.ToSalary)</span> triệu </p>

            </div>
                    <div>
                        <p class="grid_11 omega size-text-15">
                        <a class="btn btnManage" href="@Url.Action("EditNews","Adverts",new { id=news.ID})"><b class="fa fa-edit" aria-hidden="true"></b>Sửa</a>    
                            @if (news.MaxReup - news.CountReup > 0 && news.ToCreateNews >= DateTime.Now)
{
    <a class="btn btnManage" href="#reup" onclick="reupMN(this,@news.ID)"> <b class="fa fa-refresh" aria-hidden="true"></b>Làm mới tin (@(news.MaxReup - news.CountReup)) </a>
}
                        <button type="button" class="btn btnManage" data-toggle="modal" data-target="#myModal_@news.ID"><b class="fa fa-remove" aria-hidden="true"></b>Xóa tin</button></p>

                    </div>
                    <!-- Modal -->
                    <div id="myModal_@news.ID" class="modal fade" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Xóa bỏ</h4>
                                </div>
                                <div class="modal-body">
                                    <p>Bạn có chắc chắn muốn xóa tin đăng này? Lưu ý tất cả dữ liệu của bạn sẽ bị mất! Vì vậy bạn có thể chuyển sang chế độ ngưng đăng tin này để lưu dữ liệu. Vui lòng xác nhận việc xóa tin đăng<b> @news.Title</b> </p>

                                </div>
                                <div class="modal-footer">

                                    <a class="btn btn-default" href="@Url.Action("DeleteAdvert","Adverts",new { idAdvert = news.ID})">Xóa </a>
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Không</button>
                                </div>
                            </div>

                        </div>
                    </div>
        </li>
           }
          
           
       }
   }
        
    
    <li class="page">
        <div class="page_links">
            <span>Trang</span>
            @if (count > 0)
            {
                var p = Math.Ceiling((double)count / view);
                for (int i = 1; i <= (int)p; i++)
                {
                    <a data-ref='@(page != i ? "" + Url.Action("PManaTinMoiNhat", "Management", new { tt = tt, from = (i - 1) * view, page = i, view = view }) + "" : "")' style="cursor: pointer" onclick="loadMNPageFrom(this);" @(page == i ? " class=active" : "")>@i</a>
                }
            }
            <a class="nextPage" onclick="loadMNPageFromNext(this);">Tiếp</a>
        </div>
        <div class="more">
            <i class="fa fa-angle-double-right" aria-hidden="true"></i><a href="@Url.Action("Search","Default",new {typenews=typeVip.ID})">Xem thêm</a>
        </div>
    </li>
</ul>


<style>
    a.active {
        cursor: auto;
    }
</style>
<script>
    function reupMN(el, id) {
      
        var url = '@Url.Action("PManaTinMoiNhat", "Management", new { from = from, page = page, view = view, tt = tt })';
        if (url != "") {
            $(el).parents('.group_work').find('.loading').show();
            $(el).parents('.group_work').find('.loading_icon').show();
            var urlPost = '@Url.Action("Reup", "Adverts")';
            $.post(urlPost, { id: id }).done(function (dataPost) {
               
                $.get(url, function (data) {
                    var elP = $(el).parents('.group_work').eq(0).find('ul.list_work').eq(0);
                    elP.html($(data).html());
                    elP.parents('.group_work').find('.loading').eq(0).hide();
                    elP.parents('.group_work').find('.loading_icon').eq(0).hide();

                });
            });


        }
    }
    function loadMNFilterPageFrom(el) {
        var url = '@Url.Action("PManaTinMoiNhat", "Management", new { from = 0, page = 0, view = view })' + "&tt=" + $(el).val();
        if (url != "") {
            $(el).parents('.group_work').find('.loading').show();
            $(el).parents('.group_work').find('.loading_icon').show();
            $.get(url, function (data) {
                //$(el).parents('.group_work').eq(0).find('ul.list_work_2.green').eq(0).html($(data).html());
                var elP = $(el).parents('.group_work').eq(0).find('ul.list_work_2.green').eq(0);
                elP.html($(data).html());
                elP.parents('.group_work').find('.loading').eq(0).hide();
                elP.parents('.group_work').find('.loading_icon').eq(0).hide();
            });
        }

    }
    function loadMNPageFrom(el) {
        var url = $(el).attr('data-ref');
        if (url != "") {
            $(el).parents('.group_work').find('.loading').show();
            $(el).parents('.group_work').find('.loading_icon').show();
            $.get(url, function (data) {
                //$(el).parents('ul.list_work_2.green').eq(0).html($(data).html());
                var elP = $(el).parents('ul.list_work_2.green').eq(0);
                elP.html($(data).html());

                elP.parents('.group_work').find('.loading').eq(0).hide();
                elP.parents('.group_work').find('.loading_icon').eq(0).hide();

            });
        }

    }
    function loadMNPageFromNext(el) {

        var elNext = $(el).parents('.page_links').eq(0).find('a.active').next();
        if (!$(elNext).hasClass('nextPage')) {
            $(elNext).click();
        }

    }


</script>